@model education.Models.content

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>content</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title)
                @Html.ValidationMessageFor(model => model.title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.introtext, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.introtext)
                @Html.ValidationMessageFor(model => model.introtext)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fulltext, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fulltext)
                @Html.ValidationMessageFor(model => model.fulltext)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.state, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.state)
                @Html.ValidationMessageFor(model => model.state)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.catid, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.catid)
                @Html.ValidationMessageFor(model => model.catid)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.created, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.created)
                @Html.ValidationMessageFor(model => model.created)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.create_by, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.create_by)
                @Html.ValidationMessageFor(model => model.create_by)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.image, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.image)
                @Html.ValidationMessageFor(model => model.image)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ordering, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ordering)
                @Html.ValidationMessageFor(model => model.ordering)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hit, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hit)
                @Html.ValidationMessageFor(model => model.hit)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
